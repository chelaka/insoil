$green-gradient: linear-gradient(119deg, #61c14a 0%, #e4eb60 140%) !important;

h1,
h2,
h3,
h4,
h5,
h6 {
  letter-spacing: -1.5px;
}

html,
body {
  letter-spacing: -0.5px;
}

//language
html {
  &[lang="en"] {
    en {
      display: contents !important;
    }
    nl {
      display: none !important;
    }
  }
  &[lang="nl"] {
    en {
      display: none !important;
    }
    nl {
      display: contents !important;
    }
  }
}

.no-scroll {
  overflow: hidden;
}

.btn-gradient {
  background: $green-gradient;
  color: #000000 !important;
  border: none !important;
  font-weight: 700 !important;
}

.gradient-text {
  /* Fallback: Set a background color. */
  background-color: green;

  /* Create the gradient. */
  background-image: $green-gradient;

  /* Set the background size and repeat properties. */
  background-size: 100%;
  background-repeat: repeat;

  /* Use the text as a mask for the background. */
  /* This will show the gradient as a text color rather than element bg. */
  -webkit-background-clip: text;
  -webkit-text-fill-color: transparent;
  -moz-background-clip: text;
  -moz-text-fill-color: transparent;
}

.img-line {
  display: flex;
  > img {
    width: 2rem;
    height: 2rem;
    margin-right: 1.5rem;
  }
}

.underline {
  position: relative;

  &::after {
    content: "";
    position: absolute;
    bottom: -0.4rem;
    left: -0.2rem;
    right: -0.2rem;
    height: 0.75rem;

    // Position the line behind the text so that
    // it is still easily readable
    z-index: -1;

    // The SVG is added as an SVG background image
    background-image: url("/assets/images/underline.svg");
    background-repeat: no-repeat;

    // This allows the SVG to flex in size to fit
    // any length of word. If the word is short,
    // the SVG will be stretched vertically, if it
    // is long, the SVG will be stretched horizontally.
    // The jagged nature of this particular SVG works
    // with this transforming.
    background-size: cover;
  }
}

p > strong {
  font-weight: 400;

  &::after {
    // Specific positioning for smaller text
    bottom: -0.2rem;
    height: 0.5rem;
    left: -0.25rem;
    right: -0.25rem;
  }
}

.floating-card {
  position: absolute;
  .record {
    img {
      max-width: 15%;
    }
    .name {
      flex: 1;
    }
  }
}

.transparent-card {
  position: absolute;
  background: rgba(255, 255, 255, 0.5);
  backdrop-filter: blur(17.5px);
  -webkit-backdrop-filter: blur(17.5px);
  border: 1px solid rgba(255, 255, 255, 0.3);
  .content {
    flex: 1;
  }
}

.navbar {
  background: transparent;
  transition: all 0.25 ease-in-out;
  .logo {
    max-width: 100px;
  }
  &.opaque {
    background: rgba(255, 255, 255, 0.5);
    backdrop-filter: blur(17.5px);
    -webkit-backdrop-filter: blur(17.5px);
    border: 1px solid rgba(255, 255, 255, 0.3);
  }
}

.hero-section {
  background: url("../images/noise-bg.png"), linear-gradient(#fff, #fff);
  .hero-image {
    scale: 1.05;
  }
}

.problem-section {
  .challenge {
    flex: 0 1 33%;
    @media screen and (max-width: 768px) {
      flex: 1 0 100%;
    }
    img {
      max-width: 50%;
      @media screen and (max-width: 768px) {
        max-width: 40%;
      }
    }
  }
}

.solution-section {
  .solution-card {
    .floating-card-1 {
      width: 65%;
      bottom: -20%;
      right: -20%;
      @media screen and (max-width: 992px) {
        width: 36%;
        bottom: -6%;
        right: 5%;
      }
      @media screen and (max-width: 768px) {
        width: 50%;
      }
      @media screen and (max-width: 598px) {
        width: 70%;
        bottom: -11%;
        right: 4%;
        scale: 0.9;
      }
    }
    .solution-points {
      .point {
        .see-how {
          cursor: pointer;
          transition: all 0.25s ease;
          &:hover {
            gap: 0.75rem !important;
          }
        }
      }
    }
  }
  .nutrient-popup {
    ol {
      list-style-type: none; /* Remove default numbering */
      counter-reset: my-counter; /* Reset the counter */
      padding-left: 0; /* Remove default left padding */
    }

    li {
      position: relative; /* Create a positioning context for pseudo-element */
      margin-bottom: 10px; /* Adjust spacing between list items */
      padding-left: 2rem;
    }

    li:before {
      content: counter(
        my-counter
      ); /* Set the content of the pseudo-element to the counter value */
      counter-increment: my-counter; /* Increment the counter */
      position: absolute; /* Position the number */
      left: -20px; /* Adjust the horizontal position of the number */
      font-weight: bold; /* Apply styling to the number */
      color: #000; /* Apply color to the number */
      background: $green-gradient;
      padding: 0rem 0.6rem;
      border-radius: 100%;
      min-width: 30px;
    }
    .transparent-card {
      scale: 0.8;
      top: -24%;
      right: -20%;
      width: 95%;
      @media screen and (max-width: 768px) {
        top: -2%;
        right: 50%;
        width: 95%;
        transform: translateX(50%);
        scale: 1;
      }
    }
  }
  .water-popup {
    .transparent-card {
      scale: 0.6;
      top: -30%;
      right: -23%;
      width: 108%;
    }
    .soil-heroes {
      position: absolute;
      width: 40%;
      bottom: -5%;
      left: 0%;
    }
  }
}

.effect-section {
  .cards {
    position: absolute;
    top: 0%;
    left: -18%;
    width: 30%;
    min-width: 250px;
    scale: 0.95;
    @media screen and (max-width: 992px) {
      position: static;
      width: 100%;
      scale: 1;
    }
    .transparent-card,
    .floating-card {
      position: static;
    }
  }
}

.community-bg {
  &:before {
    content: " ";
    width: 100%;
    height: 100%;
    display: block;
    opacity: 8%;
    position: absolute;
    top: -1px;
    left: -1px;
    z-index: 0;
    pointer-events: none;
    background-size: 100px 100px;
    background-image: linear-gradient(to right, white 1px, transparent 1px),
      linear-gradient(to bottom, white 1px, transparent 1px);
  }

  .grid {
    width: 100%;
    display: grid;
    grid-template-columns: 2fr 2fr 1fr 2fr 1fr;
    grid-gap: 1.5rem;
    @media screen and (max-width: 768px) {
      grid-template-columns: 2fr 2fr 1fr;
      grid-gap: 1rem;
    }
  }
}

.popup:is([open]) {
  width: 90%;
  max-width: 60rem;
  max-height: 90vh;
  border: none;
  border-radius: 0.4rem;
  margin: auto;
  overflow: auto;
  outline: none;

  &::backdrop {
    background-color: #000000d1;
  }
  .popup-wrapper {
    display: flex;
    height: 100%;
    padding: 2rem 1rem;
    @media screen and (max-width: 598px) {
      flex-direction: column;
      max-height: 38rem;
      overflow: auto;
      padding: 2rem 0;
    }
  }
  .close-dialog {
    position: absolute;
    top: 0.5rem;
    right: 0.5rem;
    scale: 0.7;
    padding: 0.8rem;
    cursor: pointer;
    border-radius: 100%;
    transition: background 0.2s ease-in-out;
    display: grid;
    @media screen and (max-width: 598px) {
      top: 0;
      right: 0;
    }
    &:hover {
      background-color: #000;
      svg {
        path {
          stroke: #fff;
        }
      }
    }
  }
  .popup-content {
    flex: 1;
  }
}
